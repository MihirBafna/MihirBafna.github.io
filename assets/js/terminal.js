function printout(n){output=`<div class="terminal-line"><span class="success">\u279c</span> <span class="directory">~</span> ${n}</div>`,COMMANDS.hasOwnProperty(n)?output+=COMMANDS[n]:output+=`<div class="terminal-line">command not found: ${n}</div>`,terminalOutput.innerHTML=`${terminalOutput.innerHTML}<br><div class="terminal-line">${output}<br></div>`,terminalOutput.scrollTop=terminalOutput.scrollHeight}function showHist(){terminalOutput.innerHTML=`${terminalOutput.innerHTML}<div class="terminal-line">${lastCommands.join(", ")}</div>`}function clearScreen(){location.reload()}let userInput,terminalOutput,projAsk=!1,lastCommands=[];const COMMANDS={ls:"about&nbsp;&nbsp;&nbsp;&nbsp;experience&nbsp;&nbsp;&nbsp;&nbsp;publications&nbsp;&nbsp;&nbsp;&nbsp;cv",cd:"changed directory to root..","cd about":"Opening Mihir's 'About' section...","cd publications":"Opening Mihir's 'Publications' section...","cd experience":"Opening Mihir's 'Experience' section...","cd cv":"Opening Mihir's 'cv' section...","cd repositories":"Opening Mihir's 'repositories' section...",exit:"Exiting terminal...","cd ..":"cd: no such file or directory",sudo:"user not in the sudoers file.  This incident will be reported.",help:'System commands: <span class="code">clear</span>, <span class="code">history</span>, <span class="code">cd</span>, <span class="code">ls</span>, <span class="code">exit</span> <br> Supported commands: <span class="code">info</span>, <span class="code">github</span>, <span class="code">linkedin</span><br>Tip: Use Up / Down arrow to go through recent commands',info:"<span class='aboutHead'>Name:</span> Mihir<br><span class='aboutHead'>Location:</span> Atlanta<br><span class='aboutHead'>Favourites:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class='aboutTail'>Os</span>: Arch, MacOs&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class='aboutTail'>Editor</span>: Vim, Nova<br/>&nbsp;&nbsp;&nbsp;&nbsp;<span class='aboutTail'>Version Control</span>: Git<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class='aboutTail'>Tabs or Spaces</span>: Depends usually <i>Tabs</i><br>&nbsp;&nbsp;&nbsp;&nbsp;"},app=()=>{userInput=document.getElementById("userInput"),terminalOutput=document.getElementById("terminalOutput"),document.getElementById("dummyKeyboard").focus(),console.log("Application loaded")},execute=function(n){n=n.toLowerCase(),lastCommands.push(n);let s=2e3;0!==n.length&&(n.indexOf("sudo")>=0&&(n="sudo"),"cd about"==n||"exit"==n?(printout(n),setTimeout(function(){open("/","_self")},s)):"cd experience"==n?(printout(n),setTimeout(function(){open("/experience/","_self")},s)):"cd publications"==n?(printout(n),setTimeout(function(){open("/publications/","_self")},s)):"cd cv"==n?(printout(n),setTimeout(function(){open("/cv/","_self")},s)):"clear"===n||"cls"===n?clearScreen():"history"===n?showHist():"github"===n?open("https://github.com/MihirBafna"):printout(n))},key=n=>{const s=userInput.innerHTML;if("Enter"===n.key)return execute(s),void(userInput.innerHTML="");userInput.innerHTML=s+n.key},backspace=n=>{8!==n.keyCode&&46!==n.keyCode||(userInput.innerHTML=userInput.innerHTML.slice(0,userInput.innerHTML.length-1))};let iter=0;const up=n=>{"ArrowUp"===n.key&&lastCommands.length>0&&iter<lastCommands.length&&(iter+=1,userInput.innerHTML=lastCommands[lastCommands.length-iter]),"ArrowDown"===n.key&&lastCommands.length>0&&iter>1&&(iter-=1,userInput.innerHTML=lastCommands[lastCommands.length-iter])};document.addEventListener("keydown",up),document.addEventListener("keydown",backspace),document.addEventListener("keypress",key),document.addEventListener("DOMContentLoaded",app);